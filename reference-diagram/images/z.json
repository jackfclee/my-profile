[
  {
    "topic": "ai-ml",
    "displayName": "AI and ML",
    "references": [
      {
        "file": "AI Tools 2023.jpg",
        "displayName": "AI Tools 2023 (Careerflow.ai)",
        "tags": [
          "AI",
          "Tool"
        ]
      },
      {
        "file": "ChatGPT - How we get here.png",
        "displayName": "ChatGPT - How we get here? (bytebytego)",
        "tags": [
          "GPT",
          "Timeline"
        ]
      },
      {
        "file": "GPT (Generative Pre-Train) Timeline.png",
        "displayName": "",
        "tags": [
          "GPT",
          "Timeline"
        ]
      },
      {
        "file": "How does ChatGPT like system work.png",
        "displayName": "How does ChatGPT like system work? (bytebytego)",
        "tags": [
          "GPT",
          "Architecture",
          "Design",
          "Flow"
        ]
      },
      {
        "file": "Mapping AI in the software development lifecycle.jpg",
        "displayName": "Mapping AI in the software development lifecycle",
        "tags": [
          "AI",
          "Tool",
          "DevOps"
        ]
      }
    ]
  },
  {
    "topic": "alerting-auditing-logging-monitoring",
    "displayName": "Alerting, Auditing, Logging and Monitoring",
    "references": [
      {
        "file": "Debugging Tactics.jpg",
        "displayName": "Debugging Tactics",
        "tags": [
          "Log",
          "Logging",
          "Debug",
          "Debugging"
        ]
      },
      {
        "file": "ELK Stack.png",
        "displayName": "ELK Stack Illustrated (bytebytego)",
        "tags": [
          "Log",
          "Logging",
          "Debug",
          "Debugging",
          "ELK",
          "Architecture",
          "Design",
          "Flow"
        ]
      },
      {
        "file": "How are Notifications pushed to our devices.jpg",
        "displayName": "How are Notifications pushed to our devices (bytebytego)",
        "tags": [
          "Notification",
          "Alert",
          "Alerting",
          "Architecture",
          "Design",
          "Flow"
        ]
      },
      {
        "file": "Log Parsing Cheat Sheet.jpg",
        "displayName": "Log Parsing Cheat Sheet",
        "tags": [
          "Log",
          "Logging",
          "Parse",
          "Parsing",
          "Cheat",
          "Command",
          "Comparison"
        ]
      },
      {
        "file": "Logging Tracing Metrics.gif",
        "displayName": "Logging, Tracing, Metrics (bytebytego)",
        "tags": [
          "Log",
          "Logging",
          "Trace",
          "Tracing",
          "Metric",
          "Flow",
          "Comparison"
        ]
      },
      {
        "file": "Metric Monitoring and Alerting system.png",
        "displayName": "Metric, Monitoring and Alerting System",
        "tags": [
          "Metric",
          "Monitoring",
          "Alerting",
          "Architecture",
          "Design"
        ]
      },
      {
        "file": "The log4j JNDI attack.jpg",
        "displayName": "The Log4j JNDI Attack and how to prevent it",
        "tags": [
          "Log",
          "Logging",
          "Incident",
          "Bug",
          "Attack",
          "Flow"
        ]
      }
    ]
  },
  {
    "topic": "api-microservices",
    "displayName": "API microservices",
    "references": [
      {
        "file": "9 Types API Testing.gif",
        "displayName": "9 Types API Testing (bytebytego)",
        "tags": [
          "REST",
          "Testing",
          "API",
          "Comparison"
        ]
      },
      {
        "file": "API Architectural Styles - Comparison.jpg",
        "displayName": "API Architectural Styles Comparison",
        "tags": [
          "REST",
          "API",
          "Architecture",
          "Design",
          "Message",
          "Format",
          "Timeline",
          "Comparison"
        ]
      },
      {
        "file": "API Architectural Styles - Overview.jpg",
        "displayName": "API Architectural Styles Overview (bytebytego)",
        "tags": [
          "REST",
          "API",
          "Architecture",
          "Design",
          "Flow"
        ]
      },
      {
        "file": "API Architectural Styles - Simple.jpg",
        "displayName": "API Architectural Styles Simple",
        "tags": [
          "REST",
          "API",
          "Architecture",
          "Design",
          "Flow"
        ]
      },
      {
        "file": "API Operation.png",
        "displayName": "API Operation",
        "tags": [
          "REST",
          "HTTP",
          "Verb",
          "Request",
          "API",
          "GET",
          "PUT",
          "POST",
          "DELETE",
          "PATCH",
          "Comparison"
        ]
      },
      {
        "file": "API Response Code.png",
        "displayName": "API Response Code",
        "tags": [
          "REST",
          "HTTP",
          "Response",
          "Code",
          "API",
          "Comparison"
        ]
      },
      {
        "file": "Design Effective and Safe APIs.jpg",
        "displayName": "Design Effective and Safe APIs (bytebytego)",
        "tags": [
          "API",
          "URI",
          "Naming",
          "Pattern",
          "Design",
          "REST",
          "Comparison"
        ]
      },
      {
        "file": "Evolution of an API Architecture.jpg",
        "displayName": "",
        "tags": [
          "Monolith",
          "Direct",
          "Access",
          "Gateway",
          "Layer",
          "Federated",
          "Aggregation",
          "Pattern"
        ]
      },
      {
        "file": "HTTP Status Code.jpeg",
        "displayName": "HTTP Response Code (bytebytego)",
        "tags": [
          "REST",
          "HTTP",
          "Response",
          "Code",
          "API",
          "Comparison"
        ]
      },
      {
        "file": "Orchestration vs Choreography of Microservices.jpg",
        "displayName": "Orchestration vs Choreography of Microservices",
        "tags": [
          "Orchestration",
          "Choreography",
          "Microservices"
        ]
      },
      {
        "file": "Top 9 HTTP Request Methods.gif",
        "displayName": "Top 9 HTTP Request Methods (bytebytego)",
        "tags": [
          "REST",
          "HTTP",
          "Verb",
          "Request",
          "API",
          "GET",
          "PUT",
          "POST",
          "DELETE",
          "PATCH",
          "HEAD",
          "CONNECT",
          "OPTIONS",
          "TRACE",
          "Comparison"
        ]
      },
      {
        "file": "What does API Gateway do.jpg",
        "displayName": "What does API Gateway do (bytebytego)",
        "tags": [
          "API",
          "Gateway",
          "Flow"
        ]
      }
    ]
  },
  {
    "topic": "architecture-design",
    "displayName": "Architecture Design",
    "references": [
      {
        "file": "18 Key Design Patterns.jpg",
        "displayName": "18 Key Design Patterns (bytebytego)",
        "tags": []
      },
      {
        "file": "Architectural Characteristics.png",
        "displayName": "Architectural Characteristics.",
        "tags": []
      },
      {
        "file": "Backend Burger 1.jpg",
        "displayName": "Backend Burger",
        "tags": []
      },
      {
        "file": "Backend Burger 2.jpg",
        "displayName": "Backend Burger (bytebytego)",
        "tags": []
      },
      {
        "file": "Backend for Frontend pattern.png",
        "displayName": "Backend for Frontend pattern",
        "tags": []
      },
      {
        "file": "Design for Internationalization.jpg",
        "displayName": "Design for Internationalization (bytebytego)",
        "tags": []
      },
      {
        "file": "How do we design a chat application.jpg",
        "displayName": "How do we design a chat application? (bytebytego)",
        "tags": []
      },
      {
        "file": "Microservice Architecture.jpg",
        "displayName": "Microservice Architecture (bytebytego)",
        "tags": []
      },
      {
        "file": "Possible experiment platform architecture.jpg",
        "displayName": "Possible experiment platform architecture",
        "tags": []
      },
      {
        "file": "Proximity Service Design.jpg",
        "displayName": "Proximity Service Design (bytebytego)",
        "tags": []
      },
      {
        "file": "System Design Interview - Step by Step guide.jpg",
        "displayName": "System Design Interview - Step by Step guide",
        "tags": []
      }
    ]
  },
  {
    "topic": "caching",
    "displayName": "Caching",
    "references": [
      {
        "file": "Cache Miss Attack.jpg",
        "displayName": "Cache Miss Attack (bytebytego)",
        "tags": []
      },
      {
        "file": "Memcached vs Redis.jpg",
        "displayName": "Memcached vs Redis (bytebytego)",
        "tags": []
      },
      {
        "file": "Read Replica Pattern.png",
        "displayName": "Read Replica Pattern (bytebytego)",
        "tags": []
      },
      {
        "file": "Things to consider when using Cache.png",
        "displayName": "Things to consider when using Cache (bytebytego)",
        "tags": []
      },
      {
        "file": "Top Redis Use Cases.jpg",
        "displayName": "Top Redis Use Cases (bytebytego)",
        "tags": []
      },
      {
        "file": "Top caching strategies.jpg",
        "displayName": "Top caching strategies (bytebytego)",
        "tags": []
      },
      {
        "file": "Where do we Cache Data.jpg",
        "displayName": "Where do we Cache Data? (bytebytego)",
        "tags": []
      },
      {
        "file": "Why is Redis so fast.jpg",
        "displayName": "Why is Redis so fast? (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "cicd-devops",
    "displayName": "CICD and DevOps",
    "references": [
      {
        "file": "CICD pipeline explained in 5 minutes.jpg",
        "displayName": "CICD pipeline explained in 5 minutes",
        "tags": []
      },
      {
        "file": "Deployment Strategies.jpg",
        "displayName": "Deployment Strategies (bytebytego)",
        "tags": []
      },
      {
        "file": "DevOps vs DataOps vs MLOps.gif",
        "displayName": "DevOps vs DataOps vs MLOps",
        "tags": []
      },
      {
        "file": "Git Workflow and Immutability.jpg",
        "displayName": "Git Workflow and Immutability (bytebytego)",
        "tags": []
      },
      {
        "file": "How Git Commands work.jpg",
        "displayName": "How Git Commands work? (bytebytego)",
        "tags": []
      },
      {
        "file": "Netflix Tech Stack for CICD pipeline.jpg",
        "displayName": "Netflix Tech Stack CICD pipeline (bytebytego)",
        "tags": []
      },
      {
        "file": "Shipping Code to Production.gif",
        "displayName": "How companies ship code to production? (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "clouds",
    "displayName": "Cloud Technology",
    "references": [
      {
        "file": "Cloud Comparison Cheet Sheet.jpg",
        "displayName": "Cloud Comparison Cheet Sheet 2023 (bytebytego)",
        "tags": []
      },
      {
        "file": "Cloud Services.gif",
        "displayName": "Cloud Services",
        "tags": []
      },
      {
        "file": "Google Sheets as backend.jpg",
        "displayName": "Levels.fyi scaled to millions with Google Sheets as backend",
        "tags": []
      },
      {
        "file": "How does AWS Lambda work.jpg",
        "displayName": "How does AWS Lambda work?",
        "tags": []
      },
      {
        "file": "What is cloud native.jpg",
        "displayName": "What is cloud native? (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "coding",
    "displayName": "Coding",
    "references": [
      {
        "file": "10 Good Coding Principles.gif",
        "displayName": "10 Good Coding Principles (bytebytego)",
        "tags": []
      },
      {
        "file": "Algorithms for System Design.jpg",
        "displayName": "Algorithms for System Design (bytebytego)",
        "tags": []
      },
      {
        "file": "Array, Filter, Map, Reduce.png",
        "displayName": "Array, Filter, Map, Reduce",
        "tags": []
      },
      {
        "file": "Diagram as Code.png",
        "displayName": "Diagram as Code",
        "tags": []
      },
      {
        "file": "What are the greenest programming languages.jpg",
        "displayName": "What are the greenest programming languages?",
        "tags": []
      }
    ]
  },
  {
    "topic": "container",
    "displayName": "Container",
    "references": [
      {
        "file": "Docker vs Container vs Podman.jpg",
        "displayName": "Docker vs Container vs Podman",
        "tags": []
      },
      {
        "file": "How does Docker work.jpg",
        "displayName": "How does Docker work? (bytebytego)",
        "tags": []
      },
      {
        "file": "Kubernetes-1-comparison.png",
        "displayName": "Kubernetes comparison (bytebytego)",
        "tags": []
      },
      {
        "file": "Kubernetes-2-components.png",
        "displayName": "Kubernetes components (bytebytego)",
        "tags": []
      },
      {
        "file": "Kubernetes-3-borg.jpg",
        "displayName": "Kubernetes borg",
        "tags": []
      },
      {
        "file": "Virtualization vs Containerization.jpg",
        "displayName": "Virtualization vs Containerization",
        "tags": []
      },
      {
        "file": "What is kubernetes.jpg",
        "displayName": "What is kubernetes? (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "datastore",
    "displayName": "Datastore",
    "references": [
      {
        "file": "At most once, At least once, Exactly once.png",
        "displayName": "At most once, At least once, Exactly once",
        "tags": []
      },
      {
        "file": "Database Selection Process.jpg",
        "displayName": "Database Selection Process (bytebytego)",
        "tags": []
      },
      {
        "file": "Eight Data Structures that power DB - a.jpg",
        "displayName": "8 Data Structures that power DB (bytebytego)",
        "tags": []
      },
      {
        "file": "Eight Data Structures that power DB - b.jpg",
        "displayName": "8 Data Structures that power DB",
        "tags": []
      },
      {
        "file": "Evaluating DB options.png",
        "displayName": "Evaluating DB options",
        "tags": []
      },
      {
        "file": "Inner, Left, Right, Full Join.jpg",
        "displayName": "Inner, Left, Right, Full Join",
        "tags": []
      },
      {
        "file": "Latency and consistency tradeoffs for data replication.jpg",
        "displayName": "Latency and consistency tradeoffs for data replication",
        "tags": []
      },
      {
        "file": "Smooth Data Migration with Avro.jpg",
        "displayName": "Smooth Data Migration with Avro (bytebytego)",
        "tags": []
      },
      {
        "file": "Upload a file to S3.jpg",
        "displayName": "Upload a file to S3",
        "tags": []
      },
      {
        "file": "Which Database should I use.jpg",
        "displayName": "Which Database should I use?",
        "tags": []
      },
      {
        "file": "Why is PostgreSQL voted most loved.png",
        "displayName": "Why is PostgreSQL voted most loved? (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "domain-concept",
    "displayName": "Domain Concepts",
    "references": [
      {
        "file": "Design a Payment System.png",
        "displayName": "Design a Payment System",
        "tags": []
      },
      {
        "file": "E-commerce workflow behind the scenes.jpg",
        "displayName": "E-commerce workflow behind the scenes (bytebytego)",
        "tags": []
      },
      {
        "file": "Foreign Exchange in Payments.jpg",
        "displayName": "Foreign Exchange in Payments",
        "tags": []
      },
      {
        "file": "How do Dispute and Chargeback Work.jpg",
        "displayName": "How do Dispute and Chargeback Work? (bytebytego)",
        "tags": []
      },
      {
        "file": "How to avoid double payment.jpg",
        "displayName": "How to avoid double payment? (bytebytego)",
        "tags": []
      },
      {
        "file": "How to learn Payments.png",
        "displayName": "How to learn Payments? (bytebytego)",
        "tags": []
      },
      {
        "file": "ISO standard for smart card.png",
        "displayName": "ISO standard for smart card (bytebytego)",
        "tags": []
      },
      {
        "file": "Key Terms in DDD.jpg",
        "displayName": "Key Terms in Domain Driven Design - DDD (bytebytego)",
        "tags": []
      },
      {
        "file": "Long Term Implications.png",
        "displayName": "Long Term Implications",
        "tags": []
      },
      {
        "file": "Longterm-timeline-of-technology.png",
        "displayName": "A longterm timeline of technology",
        "tags": []
      },
      {
        "file": "Money Movement.jpg",
        "displayName": "Money Movement (bytebytego)",
        "tags": []
      },
      {
        "file": "SSA Framework.jpg",
        "displayName": "SSA Framework ",
        "tags": []
      },
      {
        "file": "SWIFT for cross broder payments.png",
        "displayName": "SWIFT for cross broder payments (bytebytego)",
        "tags": []
      },
      {
        "file": "The Payments Ecosystem.png",
        "displayName": "The Payments Ecosystem (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "error-handling",
    "displayName": "Error Handling",
    "references": [
      {
        "file": "Retry Patterns.jpg",
        "displayName": "Retry Patterns (bytebytego)",
        "tags": []
      },
      {
        "file": "What makes a good error message.jpg",
        "displayName": "What makes a good error message?",
        "tags": []
      }
    ]
  },
  {
    "topic": "network",
    "displayName": "Network",
    "references": [
      {
        "file": "8 Popular Network Protocols.gif",
        "displayName": "8 Popular Network Protocols (bytebytego)",
        "tags": []
      },
      {
        "file": "A beginners guide to CDN.jpg",
        "displayName": "A beginner's guide to CDN (bytebytego)",
        "tags": []
      },
      {
        "file": "Forward Proxy and Reverse Proxy.jpg",
        "displayName": "Forward Proxy and Reverse Proxy (bytebytego)",
        "tags": []
      },
      {
        "file": "How HTTPS works.jpg",
        "displayName": "How HTTPS works? (bytebytego)",
        "tags": []
      },
      {
        "file": "How did we get to HTTP 3.png",
        "displayName": "How did we get to HTTP 3? (bytebytego)",
        "tags": []
      },
      {
        "file": "How does DNS resolve IP.jpg",
        "displayName": "How does DNS resolve IP?",
        "tags": []
      },
      {
        "file": "How does HTTPS work.png",
        "displayName": "How does HTTPS work? (bytebytego)",
        "tags": []
      },
      {
        "file": "How does gPRC work.jpg",
        "displayName": "How does gPRC work? (bytebytego)",
        "tags": []
      },
      {
        "file": "Is HTTPS reliable.jpg",
        "displayName": "Is HTTPS reliable? (bytebytego)",
        "tags": []
      },
      {
        "file": "Load Balancer vs API Gateway.png",
        "displayName": "Load Balancer vs API Gateway (bytebytego)",
        "tags": []
      },
      {
        "file": "Load Balancing Algorithms.jpg",
        "displayName": "Load Balancing Algorithms (bytebytego)",
        "tags": []
      },
      {
        "file": "Reliable UDP in Gaming.jpg",
        "displayName": "Reliable UDP in Gaming (bytebytego)",
        "tags": []
      },
      {
        "file": "Types of VPNs.jpg",
        "displayName": "Types of VPNs",
        "tags": []
      },
      {
        "file": "What is OSI model.jpg",
        "displayName": "What is OSI model (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "performance",
    "displayName": "Performance",
    "references": [
      {
        "file": "Design Principles for High Concurrency, High Availability, and Quick Responsiveness System.png",
        "displayName": "Design Principles for High Concurrency, High Availability, and Quick Responsiveness System",
        "tags": []
      },
      {
        "file": "From 0 to Millions - a Guide to Scaling Your App.jpg",
        "displayName": "From 0 to Millions - a Guide to Scaling Your App (bytebytego)",
        "tags": []
      },
      {
        "file": "How does a modern stock exchange achieve microsecond latency - a.png",
        "displayName": "Low Latency Stock Exchange Design",
        "tags": []
      },
      {
        "file": "How does a modern stock exchange achieve microsecond latency - b.png",
        "displayName": "Low Latency Stock Exchange Design",
        "tags": []
      },
      {
        "file": "How to scale a website step by step.jpg",
        "displayName": "How to scale a website step by step? (bytebytego)",
        "tags": []
      },
      {
        "file": "Latency Numbers you show know.jpg",
        "displayName": "Latency Numbers you show know (bytebytego)",
        "tags": []
      },
      {
        "file": "Performance testing and Benchmarking.png",
        "displayName": "Performance testing and Benchmarking",
        "tags": []
      },
      {
        "file": "Vertical partitioning vs Horizontal partitioning.png",
        "displayName": "Vertical partitioning vs Horizontal partitioning",
        "tags": []
      }
    ]
  },
  {
    "topic": "queue-n-pubsub",
    "displayName": "Message Queue and PubSub",
    "references": [
      {
        "file": "How do Message Queues evolve.gif",
        "displayName": "How do Message Queues evolve? (bytebytego)",
        "tags": []
      },
      {
        "file": "Why is Kafka fast.jpg",
        "displayName": "Why is Kafka fast? (bytebytego)",
        "tags": []
      }
    ]
  },
  {
    "topic": "security",
    "displayName": "Security",
    "references": [
      {
        "file": "How SSO works.jpg",
        "displayName": "How Single Sign-On (SSO) works? (bytebytego)",
        "tags": []
      },
      {
        "file": "How to design secure web API.jpg",
        "displayName": "How to design secure web API",
        "tags": []
      },
      {
        "file": "JSON Web Token Simple Explanation.jpg",
        "displayName": "JSON Web Token Simple Explanation (bytebytego)",
        "tags": []
      },
      {
        "file": "Session, Cookie, JWT, Token, SSO, OAuth2.jpg",
        "displayName": "Session, Cookie, JWT, Token, SSO, OAuth2 (bytebytego)",
        "tags": []
      },
      {
        "file": "The payment security - problem and solution.png",
        "displayName": "The payment security - problem and solution",
        "tags": []
      }
    ]
  },
  {
    "topic": "system",
    "displayName": "System (Linux / Unix)",
    "references": [
      {
        "file": "Cron Cheatsheet.jpg",
        "displayName": "Cron Cheatsheet",
        "tags": []
      },
      {
        "file": "Linux File Permissions.jpg",
        "displayName": "Linux File Permissions (bytebytego)",
        "tags": []
      },
      {
        "file": "Linux Performance Observability Tools.jpg",
        "displayName": "Linux Performance Observability Tools",
        "tags": []
      },
      {
        "file": "What is Time and Clock.jpg",
        "displayName": "What is Time and Clock?",
        "tags": []
      }
    ]
  },
  {
    "topic": "ui-ux",
    "displayName": "UI and UX",
    "references": []
  },
  {
    "topic": "use-case",
    "displayName": "Use Cases",
    "references": [
      {
        "file": "Airbnb Microservice Architecture.jpg",
        "displayName": "Airbnb Microservice Architecture",
        "tags": []
      },
      {
        "file": "Amazon System Architecture in 1998.jpg",
        "displayName": "Amazon System Architecture in 1998",
        "tags": []
      },
      {
        "file": "Apple Pay and Google Pay Security.jpg",
        "displayName": "Apple Pay and Google Pay Security? (bytebytego)",
        "tags": []
      },
      {
        "file": "Google Maps.png",
        "displayName": "Google Maps?",
        "tags": []
      },
      {
        "file": "How Slack decides whether to send a user a notification.jpg",
        "displayName": "How Slack decides whether to send a user a notification?",
        "tags": []
      },
      {
        "file": "How does Live Streaming work.jpg",
        "displayName": "How does Live Streaming work? (bytebytego)",
        "tags": []
      },
      {
        "file": "How does Order Books work.png",
        "displayName": "How does Order Books work?",
        "tags": []
      },
      {
        "file": "How does Scan2Pay work.jpg",
        "displayName": "How does Scan2Pay work? (bytebytego)",
        "tags": []
      },
      {
        "file": "How does VISA make money.jpg",
        "displayName": "How does VISA make money? (bytebytego)",
        "tags": []
      },
      {
        "file": "How does VISA work.jpg",
        "displayName": "How does VISA work? (bytebytego)",
        "tags": []
      },
      {
        "file": "How does YouTube handle massive video content upload.png",
        "displayName": "How does YouTube handle massive video content upload? (bytebytego)",
        "tags": []
      },
      {
        "file": "Instagram Architecture.gif",
        "displayName": "Instagram Architecture",
        "tags": []
      },
      {
        "file": "Stack Overflow Architecture.jpg",
        "displayName": "Stack Overflow Architecture (bytebytego)",
        "tags": []
      },
      {
        "file": "Tickets booking system.jpg",
        "displayName": "Tickets booking system (bytebytego)",
        "tags": []
      },
      {
        "file": "Twitter Architecture 2022.png",
        "displayName": "Twitter Architecture 2022",
        "tags": []
      }
    ]
  },
  {
    "topic": "web",
    "displayName": "Web Development",
    "references": [
      {
        "file": "How do modern browsers work.jpg",
        "displayName": "How do modern browsers work?",
        "tags": []
      },
      {
        "file": "How does the browser render a web page.jpg",
        "displayName": "How does the browser render a web page? (bytebytego)",
        "tags": []
      },
      {
        "file": "MVC, MVP, MVVM, MVVMC, VIPER.jpg",
        "displayName": "MVC, MVP, MVVM, MVVMC, VIPER pattern (bytebytego)",
        "tags": []
      },
      {
        "file": "URL, URI, URN.jpg",
        "displayName": "URL vs URI vs URN (bytebytego)",
        "tags": []
      },
      {
        "file": "What happens when you type a URL into your browser.jpg",
        "displayName": "What happens when you type a URL into your browser? (bytebytego)",
        "tags": []
      }
    ]
  }
]